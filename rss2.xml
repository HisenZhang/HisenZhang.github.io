<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Hisen&#39;s Blog</title>
    <link>https://hisenz.com/</link>
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>Developers of all lands, vereinigt euch!</description>
    <pubDate>Sun, 15 Apr 2018 13:43:54 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>读书摘要系列</title>
      <link>https://hisenz.com/2018/04/15/%E8%AF%BB%E4%B9%A6%E6%91%98%E8%A6%81%E7%B3%BB%E5%88%97/</link>
      <guid>https://hisenz.com/2018/04/15/%E8%AF%BB%E4%B9%A6%E6%91%98%E8%A6%81%E7%B3%BB%E5%88%97/</guid>
      <pubDate>Sun, 15 Apr 2018 08:29:56 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;由于学习生活需要, 越发察觉到快速大量阅读的重要性. 在上一篇文章里我们讨论了快速大量阅读的适用场景和一些技巧, 而这里我将针对摘要笔记展开讨论.&lt;/p&gt;
&lt;h2 id=&quot;读书摘要&quot;&gt;&lt;a href=&quot;#读书摘要&quot; class=&quot;headerlink&quot; title=&quot;读书摘
        
      
      </description>
      
      <content:encoded><![CDATA[<p>由于学习生活需要, 越发察觉到快速大量阅读的重要性. 在上一篇文章里我们讨论了快速大量阅读的适用场景和一些技巧, 而这里我将针对摘要笔记展开讨论.</p><h2 id="读书摘要"><a href="#读书摘要" class="headerlink" title="读书摘要"></a>读书摘要</h2><p>过去我在阅读的时候几乎没有做笔记的习惯, 一本书看过了也就印在脑海里. 当需要的时候回想起来, 基本上也能记住大概的提要. 但是当阅读量增大时, 单纯的依靠记忆力就显得不是那么有效了. 快速阅读的状态下, 由于大脑需要应对高速且大量的信息输入, 难免会有细节上的遗忘. 比方说,连续的阅读了四本有关于美国20世纪初的图书, 里面包括了大量相互印证的细节和观点, 不同的作者也会有持有不同的意见. 四本书读完的时候, 给我留下了一个大概的印象, 但是有很多主要观点则是逐条的总结记录了下来.</p><h2 id="Why"><a href="#Why" class="headerlink" title="Why?"></a>Why?</h2><p>针对这些事实和观点做适当适当的摘要有利于回顾自己的阅读成果, 也便于回查. 回想起某个事实的时候, 可以在自己的记录里快速查阅出处, 并一带回顾相关的信息(事实/观点). 可以说, 摘要本身也就是阅读中的一个环节. 只是通常人们只强调了读的部分, 而忽略了记录摘要.</p><p>记录摘要是一个主动的, 积极的过程. 这样的活动有助于提醒自己在阅读时候应保持主动的姿态(Critical reading). 同样的, 整理记录也是一个思考的过程. 只被动接受信息而不主动思考是有害的.</p><blockquote><p>学而不思则罔, 思而不学则殆.</p></blockquote><p>我们的国家一直都在强调教育. 从某种层面上说, 提高阅读量确实是提升教育的一种方法; 人均阅读量也是衡量一国国民文化水平的一大指标. 但是, 如果不思考, 读书的功用便丧失了. 私以为, 我们国家学生的智力和阅读量都不低, 但是思考能力却被剥夺了(无论是有意还是无意). 这导致我国国民的思想水平和一百年前几乎毫无差异.</p><p>似乎偏题了. 当然摘记好处还有很多, 我自己也是在最近的阅读上才应用了摘要的方法来帮助阅读.</p><h2 id="方法论及形式"><a href="#方法论及形式" class="headerlink" title="方法论及形式"></a>方法论及形式</h2><p>自己的纸笔摘抄自然是一种方法. 每个人都会找到适合自己的摘记方法, 但是前提是符合自己的阅读习惯. </p><p>以我个人为例, 我习惯阅读电子书. (穷啊, 买不起纸书. 四本书动不动就上百, 学生党负担不起.) 对于我来说, 在快速翻阅之后退出电子书, 回想一下书中出现的不熟悉的概念和作者提出的观点. 然后逐一的不分顺序的把他们用键盘敲出来, 再用Markdown略加以编辑以后区分出层次. 最后会在旁边加注上自己的思考(如果有的话). 以电子档做摘要有几个好处:</p><ul><li>打字速度比手写快, 特别是中文. 如果真的有必要摘抄原句, 电子书也可以提供轻松便捷的复制功能.</li><li>方便检索, 可以充分利用计算机的特性. 有时候自己手写的笔记懒得回去翻看, 一是因为自己手写不好, 辨认费力; 而是因为检索困难. 即便有着完善的编号框架体系, 查找出某一个关键词还是需<br>要花一番功夫的, 特别是很久以前的笔记.</li><li>便于保存, 且高可用. 电子档可以永久留存, 并且可以随时随地翻看. 纸质笔记可能会丢失, 也很难想象读书笔记随身携带. 电脑和手机则允许在任何时间地点存取摘要.</li><li>便于在网络上分享. 可以把自己的见解传播出去影响他人, 提高大众姿势水平, 也可以为他人提供快速了解一本书的便利. 这也是我写作这个博客的一大目的.</li></ul><p>身边有些大佬喜欢边读书边摘记, 有时候会把整个句子抄录下来. 我个人并不是很喜欢这种方式, 原因在于抄录会打断阅读思路, 而且也会降低阅读速度, 在大量阅读的时候是明显不合适的. 不过既然大佬这做, 应该也是有自己的理由的. 所以说适用于每个个体的方法论是不存在的. </p><h2 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h2><blockquote><p>年轻人应该大量读书思考, 提高自身的姿势水平, 到西方所有国家都去见识一番. </p></blockquote>]]></content:encoded>
      
      <comments>https://hisenz.com/2018/04/15/%E8%AF%BB%E4%B9%A6%E6%91%98%E8%A6%81%E7%B3%BB%E5%88%97/#disqus_thread</comments>
    </item>
    
    <item>
      <title>关于大量阅读的一些思考</title>
      <link>https://hisenz.com/2018/04/14/%E5%85%B3%E4%BA%8E%E5%A4%A7%E9%87%8F%E9%98%85%E8%AF%BB%E7%9A%84%E4%B8%80%E4%BA%9B%E6%80%9D%E8%80%83/</link>
      <guid>https://hisenz.com/2018/04/14/%E5%85%B3%E4%BA%8E%E5%A4%A7%E9%87%8F%E9%98%85%E8%AF%BB%E7%9A%84%E4%B8%80%E4%BA%9B%E6%80%9D%E8%80%83/</guid>
      <pubDate>Sat, 14 Apr 2018 06:09:45 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;网页检索阅读-vs-图书阅读&quot;&gt;&lt;a href=&quot;#网页检索阅读-vs-图书阅读&quot; class=&quot;headerlink&quot; title=&quot;网页检索阅读 vs 图书阅读&quot;&gt;&lt;/a&gt;网页检索阅读 vs 图书阅读&lt;/h2&gt;&lt;p&gt;很多时候为了短时获取大量信息, 搜索引擎是最
        
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="网页检索阅读-vs-图书阅读"><a href="#网页检索阅读-vs-图书阅读" class="headerlink" title="网页检索阅读 vs 图书阅读"></a>网页检索阅读 vs 图书阅读</h2><p>很多时候为了短时获取大量信息, 搜索引擎是最好的选择. 但是利用网络进行信息检索只能提供很窄的面. 比如在查阅MVC相关的知识时, Google会很快返回一个相关的定义, 例子. 但是对于MVC的设计思想, 诞生的经历, 则需要更深层次的阅读. Wikipedia, ReadtheDoc等网站都可以提供大量的高度相关的信息. W3Cschool 也是一个速学前端不错的网站, 但其受诟病的原因之一在于知识点过于分散, 初学者很难系统的掌握一门技术. </p><h2 id="若干思考与建议"><a href="#若干思考与建议" class="headerlink" title="若干思考与建议"></a>若干思考与建议</h2><h3 id="为什么要大量阅读图书"><a href="#为什么要大量阅读图书" class="headerlink" title="为什么要大量阅读图书"></a>为什么要大量阅读图书</h3><p>传统的图书则提供了一种不同的学习体验. 通常来说, 一本好的书会分有明确的层次, 并以一种系统的方式将内容聚合在一起. <code>如何阅读</code> 一书, 系统的阐述了阅读的本质以及阅读的方法. </p><p>但是并不是每一本书都是包罗万象的. 并且一些general的介绍性书籍往往缺乏所需的细节和深度. 因此所需的信息并不是从一本书中就可以轻松获取到的. 在大多数时候, 阅读一系列相关的书籍会提供更全面的信息, 进而更加能体现出图书阅读的优势.</p><h3 id="积极阅读"><a href="#积极阅读" class="headerlink" title="积极阅读"></a>积极阅读</h3><p>在一般观念中, 阅读是被动接受信息的过程. 这一方式在大量阅读的时候是极其低效的. 阅读的过程是主动的积极的, 接受信息的同时也应该同步考虑:</p><ul><li>这是不是我需要的信息</li><li>这是不是我已经知道的信息</li><li>这是不是和其他的材料存在联系</li></ul><p>积极阅读是下面所有建议的基石.</p><h3 id="确定阅读目标"><a href="#确定阅读目标" class="headerlink" title="确定阅读目标"></a>确定阅读目标</h3><p>在大量阅读之前,需要确定明确的阅读目标. 由于图书是系统编写的, 并非所有的内容都是需要的. 一个明确的目标有助于聚焦于关键信息. 在使用搜索引擎的时候这一步是自动完成的, 引擎利用关键字定位. 同理, 当知道自己的阅读目标的时候, 信息就可以被快速的检索出来. 当面对几十本书的时候, 这种方式可以加速信息接收的速度. </p><p>如, 阅读<code>如何阅读</code> 时, 急于了解快速阅读技巧的读者可以翻看每个章节的最后几段; 想要了解为什么这些技巧奏效的原因的读者则会把每章的前几段细细阅读.</p><h3 id="主动调节读速"><a href="#主动调节读速" class="headerlink" title="主动调节读速"></a>主动调节读速</h3><p>如果只是简单的逐字逐句的读, 阅读速度是大致恒定的. 但是由于大量阅读时会有内容方面的侧重, 读速也会因此变化. 通常来说, 关键的部分可以放慢速度, 而一些无关的, 已知的, 浅显的内容则可以加速或者直接跳过. </p><p>有些时候, 跳过一段文字会带来’罪恶感’. 但事实上不必阅读暂时不需要的部分. 现在人们获取信息的成本非常低(无论是时间还是金钱), 当再次需要的时候再去获取是一种更为高效的方法.</p><h3 id="生理上做出的调整"><a href="#生理上做出的调整" class="headerlink" title="生理上做出的调整"></a>生理上做出的调整</h3><p>阅读时候的眼动规律在两个世纪之前已经有了比较系统的研究. 举个例子, 阅读时候打乱一个单词内的字母序是不会影响到内容理解的. </p><blockquote><p>Tish si a eaxmlpe.</p></blockquote><p>这说明人脑在处理字词的时候, 至少是以单词为基本单位的. 在中文里则是词汇, 而非单个汉字字符–中文阅读有时候一不留神会把一个词语读错, 而很少会把单个字读错–除非是完全不认识. </p><p>眼动在阅读的时候频率很低. 因此有意识的提高眼动频率可以加速阅读. </p><blockquote><p>每行字数 / 视野内字数 = 眼动次数</p></blockquote><p>视野的范围即每次眼动取到的词数. 经过训练, 视野可以有意识的扩张.</p><p>一个关于利用眼动加速的小技巧: 在段落两侧向内各收缩一半的视野, 可以减少每行的眼动次数.</p>]]></content:encoded>
      
      <comments>https://hisenz.com/2018/04/14/%E5%85%B3%E4%BA%8E%E5%A4%A7%E9%87%8F%E9%98%85%E8%AF%BB%E7%9A%84%E4%B8%80%E4%BA%9B%E6%80%9D%E8%80%83/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Connected to Telegram</title>
      <link>https://hisenz.com/2018/04/13/Connected-to-Telegram/</link>
      <guid>https://hisenz.com/2018/04/13/Connected-to-Telegram/</guid>
      <pubDate>Fri, 13 Apr 2018 12:27:33 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;Hisenz.com has now been connected to telegram.&lt;br&gt;This feature is powered by IFTTT’s RSS feed service, forwarding new posts to telegram c
        
      
      </description>
      
      <content:encoded><![CDATA[<p>Hisenz.com has now been connected to telegram.<br>This feature is powered by IFTTT’s RSS feed service, forwarding new posts to telegram chats or channels. However, if you prefer RSS reading, the feed is available at <a href="https://hisenz.com/rss2.xml">https://hisenz.com/rss2.xml</a>.</p>]]></content:encoded>
      
      <comments>https://hisenz.com/2018/04/13/Connected-to-Telegram/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Birthday Notes</title>
      <link>https://hisenz.com/2018/04/12/Birthday-Notes/</link>
      <guid>https://hisenz.com/2018/04/12/Birthday-Notes/</guid>
      <pubDate>Thu, 12 Apr 2018 12:58:19 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;Surprise!&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;早上出门没带钱包。抖Van请的早饭 @吴陟闻 James &lt;/li&gt;
&lt;li&gt;我11号的时候才发现生日快到了…&lt;/li&gt;
&lt;li&gt;很奇怪，今天办事都挺顺利的（做化学PPQ除外）&lt;/li&gt;
&lt;li&gt;谢谢Pusheen @XD丁天烨
        
      
      </description>
      
      <content:encoded><![CDATA[<p>Surprise!</p><ol><li>早上出门没带钱包。抖Van请的早饭 @吴陟闻 James </li><li>我11号的时候才发现生日快到了…</li><li>很奇怪，今天办事都挺顺利的（做化学PPQ除外）</li><li>谢谢Pusheen @XD丁天烨（Jerry） </li><li>下晚自修时Mr. Reimann送了小蛋糕</li><li>发现沁17天后破壳 @徐含沁 </li><li>晚自修结束的一刻决定了送沁什么礼物。 哼，今年你绝对猜不到了！</li></ol><p>因为收到了很多祝福，列表爆炸，恕我不能一一回复 。 但是很感谢各位，认识各位是海森的莫大荣幸。</p>]]></content:encoded>
      
      <comments>https://hisenz.com/2018/04/12/Birthday-Notes/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Hello World</title>
      <link>https://hisenz.com/2018/04/12/hello-world/</link>
      <guid>https://hisenz.com/2018/04/12/hello-world/</guid>
      <pubDate>Thu, 12 Apr 2018 12:08:44 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
        
      
      </description>
      
      <content:encoded><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content:encoded>
      
      <comments>https://hisenz.com/2018/04/12/hello-world/#disqus_thread</comments>
    </item>
    
    <item>
      <title>First Blog with Hexo</title>
      <link>https://hisenz.com/2018/04/12/First-Blog-with-Hexo/</link>
      <guid>https://hisenz.com/2018/04/12/First-Blog-with-Hexo/</guid>
      <pubDate>Thu, 12 Apr 2018 10:41:54 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;Several days ago my host got attacked and for the first time I realized that hosting blog on GitHub might be a wise solution. &lt;/p&gt;
&lt;p&gt;Thi
        
      
      </description>
      
      <content:encoded><![CDATA[<p>Several days ago my host got attacked and for the first time I realized that hosting blog on GitHub might be a wise solution. </p><p>This blog, created with hexo, has better writing experience. Simply edit mardown files in IDE together with code feels fantastic, and no php required as Wordpress. Everything is a file since it is a static blog.</p><p>I hope you will be attrated by improved loading performance and brief blog Theme <code>NexT</code>. Previous posts will be soon transferred to this site.</p>]]></content:encoded>
      
      <comments>https://hisenz.com/2018/04/12/First-Blog-with-Hexo/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Data Mining</title>
      <link>https://hisenz.com/2018/01/09/Data-Mining/</link>
      <guid>https://hisenz.com/2018/01/09/Data-Mining/</guid>
      <pubDate>Tue, 09 Jan 2018 07:07:35 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;Analyzing trend gives you a direction when making decisions. For instance, investigate the housing market before purchasing properties ma
        
      
      </description>
      
      <content:encoded><![CDATA[<p>Analyzing trend gives you a direction when making decisions. For instance, investigate the housing market before purchasing properties may tell you what is the most suitable place for you.</p><p>Data speak the words of truth, as long as they are treated with specific patterns. But in general, a larger dataset ensures the quality of analysis.</p><p>Fortunately, the nowadays low cost to data access makes it possible for everyone to be a data scientist. With the help of Python, database, and plotting packages, you are allowed to explore a space the once only belongs to statisticians.</p><p>In this post, we are going to have a look at:</p><ol><li>How to obtain your data;</li><li>How to store them;</li><li>How to visualize them.</li></ol><h2 id="Obtain-Your-Data-amp-Store-them"><a href="#Obtain-Your-Data-amp-Store-them" class="headerlink" title="Obtain Your Data &amp; Store them"></a>Obtain Your Data &amp; Store them</h2><p>Python is a good tool to obtain data from the Internet.<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> division</span><br><span class="line"><span class="keyword">import</span> sys,requests,re,json,sqlite3</span><br><span class="line"><span class="keyword">from</span> prettytable <span class="keyword">import</span> PrettyTable <span class="keyword">as</span> pt</span><br><span class="line"></span><br><span class="line"><span class="comment">#initialze database</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">init_db</span><span class="params">()</span>:</span></span><br><span class="line">conn = sqlite3.connect(<span class="string">'housing.db'</span>)</span><br><span class="line"><span class="comment">#initialze database connection</span></span><br><span class="line">db_cursor = conn.cursor()</span><br><span class="line">db_cursor.execute(<span class="string">'''CREATE TABLE IF NOT EXISTS housing</span></span><br><span class="line"><span class="string">(id           INT     PRIMARY KEY    NOT NULL,</span></span><br><span class="line"><span class="string">name          TEXT    NOT NULL,</span></span><br><span class="line"><span class="string">area          REAL   ,</span></span><br><span class="line"><span class="string">ve            REAL   ,</span></span><br><span class="line"><span class="string">price         REAL);'''</span>)</span><br><span class="line"><span class="comment"># create a table housing if not exists</span></span><br><span class="line">conn.commit()</span><br><span class="line"><span class="keyword">return</span> conn,db_cursor</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ve_convert</span><span class="params">(GREEN_COVERAGE)</span>:</span></span><br><span class="line"><span class="keyword">if</span> isinstance(GREEN_COVERAGE, float):</span><br><span class="line"><span class="keyword">return</span> GREEN_COVERAGE / <span class="number">100</span></span><br><span class="line"><span class="keyword">if</span> isinstance(GREEN_COVERAGE, unicode):</span><br><span class="line">no_sign = GREEN_COVERAGE.replace(<span class="string">u'%'</span>,<span class="string">''</span>)</span><br><span class="line">no_sign = no_sign.replace(<span class="string">u'以上'</span>,<span class="string">''</span>).encode(<span class="string">'utf-8'</span>)</span><br><span class="line"><span class="keyword">return</span> float(no_sign)/<span class="number">100</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The main process of community-db.py</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">com</span><span class="params">()</span>:</span> </span><br><span class="line"></span><br><span class="line">list_page_url = <span class="string">'http://hangzhou.fangtoo.com/building/cp'</span></span><br><span class="line">sector_page_url = <span class="string">'http://hangzhou.fangtoo.com/building/'</span></span><br><span class="line"></span><br><span class="line">name_id_filter = <span class="string">ur'&amp;lt;a href=["]http://hangzhou.fangtoo.com/building/(.*)/["] target=["]_blank["] title=["](.*)["] target=["]_blank["]&amp;gt;'</span></span><br><span class="line">price_filter = <span class="string">ur'&amp;lt;span class=["]fontS30 Cred["]&amp;gt;(.*)&amp;lt;/span&amp;gt;'</span></span><br><span class="line">area_filter = <span class="string">ur'&amp;lt;li&amp;gt;占地面积：(\d.*)平方米&amp;lt;/li&amp;gt;'</span></span><br><span class="line">ve_filter = <span class="string">ur'&amp;lt;li&amp;gt;绿化率：(.*)&amp;lt;/li&amp;gt;'</span></span><br><span class="line"></span><br><span class="line">table_title = [<span class="string">"NO."</span>,<span class="string">"id"</span>,<span class="string">"Name"</span>,<span class="string">"Area"</span>,<span class="string">"Green Coverage"</span>,<span class="string">"Price"</span>]</span><br><span class="line"></span><br><span class="line">x = pt(table_title) </span><br><span class="line"><span class="comment"># Check Info</span></span><br><span class="line"></span><br><span class="line">conn,db_cursor = init_db()</span><br><span class="line"></span><br><span class="line">print(<span class="string">'\033[2J\033[HConnected to database. Requesting data from the Internet...'</span>)</span><br><span class="line"><span class="comment"># Page loop</span></span><br><span class="line"><span class="comment"># 318 as upper boundry, 10~ for DEMO</span></span><br><span class="line"><span class="keyword">for</span> sector_count <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">318</span>):</span><br><span class="line"><span class="comment"># Progression bar</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">'\nSector'</span>,sector_count,<span class="string">'of 317\n'</span></span><br><span class="line"><span class="comment"># Get URL</span></span><br><span class="line">list_page = requests.get(url = list_page_url + str(sector_count))</span><br><span class="line"><span class="comment"># Get the name_id list from page loop</span></span><br><span class="line">name_id = re.findall(name_id_filter,list_page.text)</span><br><span class="line">price = re.findall(price_filter,list_page.text)</span><br><span class="line"><span class="comment"># Leave blank 1</span></span><br><span class="line">x.padding_width = <span class="number">1</span></span><br><span class="line"><span class="comment"># Item loop</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(name_id)):</span><br><span class="line"><span class="comment"># Get info from URL</span></span><br><span class="line">sector_page = requests.get(url = sector_page_url + str(name_id[i<span class="number">-1</span>][<span class="number">0</span>]))</span><br><span class="line">sector_length = len(name_id)</span><br><span class="line"><span class="comment"># Pick info from sector_page</span></span><br><span class="line">area = re.findall(area_filter,sector_page.text) </span><br><span class="line">ve = re.findall(ve_filter,sector_page.text)</span><br><span class="line"><span class="comment"># Have '--' if area is missing</span></span><br><span class="line"><span class="keyword">if</span> area == []:</span><br><span class="line">area = [(<span class="string">'--'</span>)]</span><br><span class="line"><span class="comment"># Set varibles</span></span><br><span class="line">CODE = str(i+<span class="number">1</span>+(sector_count<span class="number">-1</span>)*sector_length)</span><br><span class="line">ID = name_id[i][<span class="number">0</span>].encode(<span class="string">'utf-8'</span>)</span><br><span class="line">NAME = name_id[i][<span class="number">1</span>].encode(<span class="string">'utf-8'</span>)</span><br><span class="line">AREA = area[<span class="number">0</span>].replace(<span class="string">u'万'</span>,<span class="string">'0000'</span>).encode(<span class="string">'utf-8'</span>)</span><br><span class="line">GREEN_COVERAGE = ve[<span class="number">0</span>].replace(<span class="string">u'。'</span>,<span class="string">''</span>).encode(<span class="string">'utf-8'</span>)</span><br><span class="line">PRICE = price[i].replace(<span class="string">u'万'</span>,<span class="string">'0000'</span>).encode(<span class="string">'utf-8'</span>)</span><br><span class="line"><span class="comment"># Generate strings based on these varibles</span></span><br><span class="line">table_data = ([CODE.zfill(<span class="number">4</span>),ID,NAME,AREA,GREEN_COVERAGE,PRICE])</span><br><span class="line"><span class="comment"># Print strings to screen in a human-friendly manner</span></span><br><span class="line"><span class="keyword">print</span> CODE.zfill(<span class="number">4</span>),ID,NAME,AREA,GREEN_COVERAGE,PRICE</span><br><span class="line">x.add_row(table_data)</span><br><span class="line"></span><br><span class="line">GREEN_COVERAGE = ve_convert(GREEN_COVERAGE)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="string">'--'</span> <span class="keyword">not</span> <span class="keyword">in</span> (CODE,NAME,AREA,GREEN_COVERAGE,PRICE):</span><br><span class="line">db_interface = (int(CODE),NAME,float(AREA),GREEN_COVERAGE,float(PRICE))</span><br><span class="line">db_cursor.execute(<span class="string">"INSERT INTO housing VALUES \</span></span><br><span class="line"><span class="string">(%d, '%s', %f, '%s', %f);"</span>%(db_interface))</span><br><span class="line">conn.commit()</span><br><span class="line"><span class="keyword">print</span> x</span><br><span class="line"></span><br><span class="line">conn.close()</span><br><span class="line">print(<span class="string">'All requests successfully recorded.'</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">(args)</span>:</span></span><br><span class="line">com()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">sys.exit(main(sys.argv))`&lt;/pre&gt;</span><br></pre></td></tr></table></figure></p><p>The program grabs information presented on a website and store all complete record into SQLite database.</p><pre><code>## Visualize Data: Let it speaksIn this case, we list three plots in order to:</code></pre><ol><li>Price distribution</li><li>The correlation of unit price, community area, and green coverage rate.</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> __future__</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> sqlite3</span><br><span class="line"></span><br><span class="line">conn = sqlite3.connect(<span class="string">'housing.db'</span>)</span><br><span class="line">db_cursor = conn.cursor()</span><br><span class="line"></span><br><span class="line">data = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> db_cursor.execute(<span class="string">'''SELECT price FROM housing;'''</span>):</span><br><span class="line">data += i</span><br><span class="line"></span><br><span class="line">std = np.std(data)</span><br><span class="line">mean = np.mean(data)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">normfun</span><span class="params">(x,mu,sigma)</span>:</span></span><br><span class="line">pdf = np.exp(-((x - mu)**<span class="number">2</span>)/(<span class="number">2</span>*sigma**<span class="number">2</span>)) / (sigma * np.sqrt(<span class="number">2</span>*np.pi))</span><br><span class="line"><span class="keyword">return</span> pdf</span><br><span class="line"></span><br><span class="line">p1 = plt.subplot2grid((<span class="number">2</span>,<span class="number">2</span>), (<span class="number">0</span>, <span class="number">0</span>), rowspan=<span class="number">2</span>)</span><br><span class="line">p2 = plt.subplot2grid((<span class="number">2</span>,<span class="number">2</span>), (<span class="number">0</span>, <span class="number">1</span>))</span><br><span class="line">p3 = plt.subplot2grid((<span class="number">2</span>,<span class="number">2</span>), (<span class="number">1</span>, <span class="number">1</span>))</span><br><span class="line"></span><br><span class="line">x = np.arange(mean<span class="number">-5</span>*std,mean+<span class="number">5</span>*std,<span class="number">1</span>)</span><br><span class="line">y = normfun(x, mean, std)</span><br><span class="line">p1.plot(x,y)</span><br><span class="line">p1.hist(data, bins=<span class="number">100</span>, rwidth=<span class="number">1</span>, normed=<span class="keyword">True</span>)</span><br><span class="line">p1.title.set_text(<span class="string">'Price Distribution'</span>)</span><br><span class="line">p1.set_xlabel(<span class="string">'Price'</span>)</span><br><span class="line">p1.set_ylabel(<span class="string">'Probability'</span>)</span><br><span class="line">p1.legend()</span><br><span class="line"></span><br><span class="line">x,y = [],[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> db_cursor.execute(<span class="string">'''SELECT ve,price FROM housing;'''</span>):</span><br><span class="line">y.append(i[<span class="number">0</span>])</span><br><span class="line">x.append(i[<span class="number">1</span>])</span><br><span class="line">p2.scatter(x,y)</span><br><span class="line">p2.title.set_text(<span class="string">'Green Coverage - Price'</span>)</span><br><span class="line">p2.set_xlabel(<span class="string">'Price'</span>)</span><br><span class="line">p2.set_ylabel(<span class="string">'Percentage'</span>)</span><br><span class="line">fit = np.polyfit(x, y, deg=<span class="number">1</span>)</span><br><span class="line">fit = (fit).tolist()</span><br><span class="line">y=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> x:</span><br><span class="line">y.append(i*fit[<span class="number">0</span>]+fit[<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line">p2.plot(x, y, <span class="string">'r-'</span>,label=<span class="string">'linear regression [%f,%f]'</span>%(fit[<span class="number">0</span>],fit[<span class="number">1</span>]))</span><br><span class="line">p2.set_ylim([<span class="number">0</span>,<span class="number">1</span>])</span><br><span class="line">p2.set_xlim([<span class="number">0</span>,<span class="number">127000</span>])</span><br><span class="line">p2.legend()</span><br><span class="line"></span><br><span class="line">x,y = [],[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> db_cursor.execute(<span class="string">'''SELECT area,price FROM housing;'''</span>):</span><br><span class="line">y.append(i[<span class="number">1</span>])</span><br><span class="line">x.append(i[<span class="number">0</span>])</span><br><span class="line">p3.scatter(x,y)</span><br><span class="line">p3.title.set_text(<span class="string">'Price - Community Area'</span>)</span><br><span class="line">p3.set_xlabel(<span class="string">'Community Area'</span>)</span><br><span class="line">p3.set_ylabel(<span class="string">'Unit Price'</span>)</span><br><span class="line">fit = np.polyfit(x, y, deg=<span class="number">1</span>)</span><br><span class="line">fit = (fit).tolist()</span><br><span class="line">y=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> x:</span><br><span class="line">y.append(i*fit[<span class="number">0</span>]+fit[<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line">p3.plot(x, y, <span class="string">'r-'</span>,label=<span class="string">'linear regression [%f,%f]'</span>%(fit[<span class="number">0</span>],fit[<span class="number">1</span>]))</span><br><span class="line">p3.set_xlim([<span class="number">0</span>,<span class="number">1000000</span>])</span><br><span class="line">p3.legend()</span><br><span class="line"></span><br><span class="line">plt.show()</span><br><span class="line">conn.close()</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://hisenz.com/2018/01/09/Data-Mining/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Online Geekish Writer</title>
      <link>https://hisenz.com/2017/11/26/Online-Geekish-Writer/</link>
      <guid>https://hisenz.com/2017/11/26/Online-Geekish-Writer/</guid>
      <pubDate>Sun, 26 Nov 2017 08:21:20 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;&lt;a href=&quot;https://writer.bighugelabs.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Online Geekish Writer&lt;/a&gt; allows you to edit and write your own 
        
      
      </description>
      
      <content:encoded><![CDATA[<p><a href="https://writer.bighugelabs.com/" target="_blank" rel="noopener">Online Geekish Writer</a> allows you to edit and write your own  document. Writing is synced to the server so that everything is up-to-date.</p><p>&nbsp;</p>]]></content:encoded>
      
      <comments>https://hisenz.com/2017/11/26/Online-Geekish-Writer/#disqus_thread</comments>
    </item>
    
    <item>
      <title>HTTPS connection is deployed.</title>
      <link>https://hisenz.com/2017/11/25/HTTPS-connection-is-deployed/</link>
      <guid>https://hisenz.com/2017/11/25/HTTPS-connection-is-deployed/</guid>
      <pubDate>Sat, 25 Nov 2017 11:36:47 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;Https, HTTP over SSL, is one of the encrypted protocols which is widely used in web serving. The reason people would like to trust https 
        
      
      </description>
      
      <content:encoded><![CDATA[<p>Https, HTTP over SSL, is one of the encrypted protocols which is widely used in web serving. The reason people would like to trust https connection is that HTTP protocol transfers non-encrypted contents. Activities such as online shopping cannot be secured under such a condition, so https was born.</p><p>Hisenz.com now has https connection working to deliver every word from this site to your browser.</p>]]></content:encoded>
      
      <comments>https://hisenz.com/2017/11/25/HTTPS-connection-is-deployed/#disqus_thread</comments>
    </item>
    
    <item>
      <title>November 22, 2017. Down.</title>
      <link>https://hisenz.com/2017/11/23/November-22-2017-Down/</link>
      <guid>https://hisenz.com/2017/11/23/November-22-2017-Down/</guid>
      <pubDate>Thu, 23 Nov 2017 10:22:54 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;It&amp;#8217;s Nov. 22, 2017, Hisen&amp;#8217;s first server is down due to the Great Firewall.&lt;/p&gt;

        
      
      </description>
      
      <content:encoded><![CDATA[<p>It&#8217;s Nov. 22, 2017, Hisen&#8217;s first server is down due to the Great Firewall.</p>]]></content:encoded>
      
      <comments>https://hisenz.com/2017/11/23/November-22-2017-Down/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
