<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hisen&#39;s Blog</title>
  
  <subtitle>Foolish &amp; Hungry</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://hisenz.com/"/>
  <updated>2018-04-13T05:21:03.319Z</updated>
  <id>https://hisenz.com/</id>
  
  <author>
    <name>Hisen Zhang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="https://hisenz.com/2018/04/13/hello-world/"/>
    <id>https://hisenz.com/2018/04/13/hello-world/</id>
    <published>2018-04-13T05:21:03.319Z</published>
    <updated>2018-04-13T05:21:03.319Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>First Blog with Hexo</title>
    <link href="https://hisenz.com/2018/04/12/First-Blog-with-Hexo/"/>
    <id>https://hisenz.com/2018/04/12/First-Blog-with-Hexo/</id>
    <published>2018-04-12T10:41:54.000Z</published>
    <updated>2018-04-13T05:31:24.888Z</updated>
    
    <content type="html"><![CDATA[<p>Several days ago my host got attacked and for the first time I realized that hosting blog on GitHub might be a wise solution. </p><p>This blog, created with hexo, has better writing experience. Simply edit mardown files in IDE together with code feels fantastic, and no php required as Wordpress. Everything is a file since it is a static blog.</p><p>I hope you will be attrated by improved loading performance and brief blog Theme <code>NexT</code>. Previous posts will be soon transferred to this site.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Several days ago my host got attacked and for the first time I realized that hosting blog on GitHub might be a wise solution. &lt;/p&gt;
&lt;p&gt;Thi
      
    
    </summary>
    
    
      <category term="News" scheme="https://hisenz.com/tags/News/"/>
    
  </entry>
  
  <entry>
    <title>Data Mining</title>
    <link href="https://hisenz.com/2018/01/09/Data-Mining/"/>
    <id>https://hisenz.com/2018/01/09/Data-Mining/</id>
    <published>2018-01-09T07:07:35.000Z</published>
    <updated>2018-04-13T05:18:43.092Z</updated>
    
    <content type="html"><![CDATA[<p>Analyzing trend gives you a direction when making decisions. For instance, investigate the housing market before purchasing properties may tell you what is the most suitable place for you.</p><p>Data speak the words of truth, as long as they are treated with specific patterns. But in general, a larger dataset ensures the quality of analysis.</p><p>Fortunately, the nowadays low cost to data access makes it possible for everyone to be a data scientist. With the help of Python, database, and plotting packages, you are allowed to explore a space the once only belongs to statisticians.</p><p>In this post, we are going to have a look at:</p><ol><li>How to obtain your data;</li><li>How to store them;</li><li>How to visualize them.</li></ol><h2 id="Obtain-Your-Data-amp-Store-them"><a href="#Obtain-Your-Data-amp-Store-them" class="headerlink" title="Obtain Your Data &amp; Store them"></a>Obtain Your Data &amp; Store them</h2><p>Python is a good tool to obtain data from the Internet.<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> division</span><br><span class="line"><span class="keyword">import</span> sys,requests,re,json,sqlite3</span><br><span class="line"><span class="keyword">from</span> prettytable <span class="keyword">import</span> PrettyTable <span class="keyword">as</span> pt</span><br><span class="line"></span><br><span class="line"><span class="comment">#initialze database</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">init_db</span><span class="params">()</span>:</span></span><br><span class="line">conn = sqlite3.connect(<span class="string">'housing.db'</span>)</span><br><span class="line"><span class="comment">#initialze database connection</span></span><br><span class="line">db_cursor = conn.cursor()</span><br><span class="line">db_cursor.execute(<span class="string">'''CREATE TABLE IF NOT EXISTS housing</span></span><br><span class="line"><span class="string">(id           INT     PRIMARY KEY    NOT NULL,</span></span><br><span class="line"><span class="string">name          TEXT    NOT NULL,</span></span><br><span class="line"><span class="string">area          REAL   ,</span></span><br><span class="line"><span class="string">ve            REAL   ,</span></span><br><span class="line"><span class="string">price         REAL);'''</span>)</span><br><span class="line"><span class="comment"># create a table housing if not exists</span></span><br><span class="line">conn.commit()</span><br><span class="line"><span class="keyword">return</span> conn,db_cursor</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ve_convert</span><span class="params">(GREEN_COVERAGE)</span>:</span></span><br><span class="line"><span class="keyword">if</span> isinstance(GREEN_COVERAGE, float):</span><br><span class="line"><span class="keyword">return</span> GREEN_COVERAGE / <span class="number">100</span></span><br><span class="line"><span class="keyword">if</span> isinstance(GREEN_COVERAGE, unicode):</span><br><span class="line">no_sign = GREEN_COVERAGE.replace(<span class="string">u'%'</span>,<span class="string">''</span>)</span><br><span class="line">no_sign = no_sign.replace(<span class="string">u'以上'</span>,<span class="string">''</span>).encode(<span class="string">'utf-8'</span>)</span><br><span class="line"><span class="keyword">return</span> float(no_sign)/<span class="number">100</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The main process of community-db.py</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">com</span><span class="params">()</span>:</span> </span><br><span class="line"></span><br><span class="line">list_page_url = <span class="string">'http://hangzhou.fangtoo.com/building/cp'</span></span><br><span class="line">sector_page_url = <span class="string">'http://hangzhou.fangtoo.com/building/'</span></span><br><span class="line"></span><br><span class="line">name_id_filter = <span class="string">ur'&amp;lt;a href=["]http://hangzhou.fangtoo.com/building/(.*)/["] target=["]_blank["] title=["](.*)["] target=["]_blank["]&amp;gt;'</span></span><br><span class="line">price_filter = <span class="string">ur'&amp;lt;span class=["]fontS30 Cred["]&amp;gt;(.*)&amp;lt;/span&amp;gt;'</span></span><br><span class="line">area_filter = <span class="string">ur'&amp;lt;li&amp;gt;占地面积：(\d.*)平方米&amp;lt;/li&amp;gt;'</span></span><br><span class="line">ve_filter = <span class="string">ur'&amp;lt;li&amp;gt;绿化率：(.*)&amp;lt;/li&amp;gt;'</span></span><br><span class="line"></span><br><span class="line">table_title = [<span class="string">"NO."</span>,<span class="string">"id"</span>,<span class="string">"Name"</span>,<span class="string">"Area"</span>,<span class="string">"Green Coverage"</span>,<span class="string">"Price"</span>]</span><br><span class="line"></span><br><span class="line">x = pt(table_title) </span><br><span class="line"><span class="comment"># Check Info</span></span><br><span class="line"></span><br><span class="line">conn,db_cursor = init_db()</span><br><span class="line"></span><br><span class="line">print(<span class="string">'\033[2J\033[HConnected to database. Requesting data from the Internet...'</span>)</span><br><span class="line"><span class="comment"># Page loop</span></span><br><span class="line"><span class="comment"># 318 as upper boundry, 10~ for DEMO</span></span><br><span class="line"><span class="keyword">for</span> sector_count <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">318</span>):</span><br><span class="line"><span class="comment"># Progression bar</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">'\nSector'</span>,sector_count,<span class="string">'of 317\n'</span></span><br><span class="line"><span class="comment"># Get URL</span></span><br><span class="line">list_page = requests.get(url = list_page_url + str(sector_count))</span><br><span class="line"><span class="comment"># Get the name_id list from page loop</span></span><br><span class="line">name_id = re.findall(name_id_filter,list_page.text)</span><br><span class="line">price = re.findall(price_filter,list_page.text)</span><br><span class="line"><span class="comment"># Leave blank 1</span></span><br><span class="line">x.padding_width = <span class="number">1</span></span><br><span class="line"><span class="comment"># Item loop</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(name_id)):</span><br><span class="line"><span class="comment"># Get info from URL</span></span><br><span class="line">sector_page = requests.get(url = sector_page_url + str(name_id[i<span class="number">-1</span>][<span class="number">0</span>]))</span><br><span class="line">sector_length = len(name_id)</span><br><span class="line"><span class="comment"># Pick info from sector_page</span></span><br><span class="line">area = re.findall(area_filter,sector_page.text) </span><br><span class="line">ve = re.findall(ve_filter,sector_page.text)</span><br><span class="line"><span class="comment"># Have '--' if area is missing</span></span><br><span class="line"><span class="keyword">if</span> area == []:</span><br><span class="line">area = [(<span class="string">'--'</span>)]</span><br><span class="line"><span class="comment"># Set varibles</span></span><br><span class="line">CODE = str(i+<span class="number">1</span>+(sector_count<span class="number">-1</span>)*sector_length)</span><br><span class="line">ID = name_id[i][<span class="number">0</span>].encode(<span class="string">'utf-8'</span>)</span><br><span class="line">NAME = name_id[i][<span class="number">1</span>].encode(<span class="string">'utf-8'</span>)</span><br><span class="line">AREA = area[<span class="number">0</span>].replace(<span class="string">u'万'</span>,<span class="string">'0000'</span>).encode(<span class="string">'utf-8'</span>)</span><br><span class="line">GREEN_COVERAGE = ve[<span class="number">0</span>].replace(<span class="string">u'。'</span>,<span class="string">''</span>).encode(<span class="string">'utf-8'</span>)</span><br><span class="line">PRICE = price[i].replace(<span class="string">u'万'</span>,<span class="string">'0000'</span>).encode(<span class="string">'utf-8'</span>)</span><br><span class="line"><span class="comment"># Generate strings based on these varibles</span></span><br><span class="line">table_data = ([CODE.zfill(<span class="number">4</span>),ID,NAME,AREA,GREEN_COVERAGE,PRICE])</span><br><span class="line"><span class="comment"># Print strings to screen in a human-friendly manner</span></span><br><span class="line"><span class="keyword">print</span> CODE.zfill(<span class="number">4</span>),ID,NAME,AREA,GREEN_COVERAGE,PRICE</span><br><span class="line">x.add_row(table_data)</span><br><span class="line"></span><br><span class="line">GREEN_COVERAGE = ve_convert(GREEN_COVERAGE)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="string">'--'</span> <span class="keyword">not</span> <span class="keyword">in</span> (CODE,NAME,AREA,GREEN_COVERAGE,PRICE):</span><br><span class="line">db_interface = (int(CODE),NAME,float(AREA),GREEN_COVERAGE,float(PRICE))</span><br><span class="line">db_cursor.execute(<span class="string">"INSERT INTO housing VALUES \</span></span><br><span class="line"><span class="string">(%d, '%s', %f, '%s', %f);"</span>%(db_interface))</span><br><span class="line">conn.commit()</span><br><span class="line"><span class="keyword">print</span> x</span><br><span class="line"></span><br><span class="line">conn.close()</span><br><span class="line">print(<span class="string">'All requests successfully recorded.'</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">(args)</span>:</span></span><br><span class="line">com()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">sys.exit(main(sys.argv))`&lt;/pre&gt;</span><br></pre></td></tr></table></figure></p><p>The program grabs information presented on a website and store all complete record into SQLite database.</p><pre><code>## Visualize Data: Let it speaksIn this case, we list three plots in order to:</code></pre><ol><li>Price distribution</li><li>The correlation of unit price, community area, and green coverage rate.<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> __future__</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> sqlite3</span><br><span class="line"></span><br><span class="line">conn = sqlite3.connect(<span class="string">'housing.db'</span>)</span><br><span class="line">db_cursor = conn.cursor()</span><br><span class="line"></span><br><span class="line">data = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> db_cursor.execute(<span class="string">'''SELECT price FROM housing;'''</span>):</span><br><span class="line">data += i</span><br><span class="line"></span><br><span class="line">std = np.std(data)</span><br><span class="line">mean = np.mean(data)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">normfun</span><span class="params">(x,mu,sigma)</span>:</span></span><br><span class="line">pdf = np.exp(-((x - mu)**<span class="number">2</span>)/(<span class="number">2</span>*sigma**<span class="number">2</span>)) / (sigma * np.sqrt(<span class="number">2</span>*np.pi))</span><br><span class="line"><span class="keyword">return</span> pdf</span><br><span class="line"></span><br><span class="line">p1 = plt.subplot2grid((<span class="number">2</span>,<span class="number">2</span>), (<span class="number">0</span>, <span class="number">0</span>), rowspan=<span class="number">2</span>)</span><br><span class="line">p2 = plt.subplot2grid((<span class="number">2</span>,<span class="number">2</span>), (<span class="number">0</span>, <span class="number">1</span>))</span><br><span class="line">p3 = plt.subplot2grid((<span class="number">2</span>,<span class="number">2</span>), (<span class="number">1</span>, <span class="number">1</span>))</span><br><span class="line"></span><br><span class="line">x = np.arange(mean<span class="number">-5</span>*std,mean+<span class="number">5</span>*std,<span class="number">1</span>)</span><br><span class="line">y = normfun(x, mean, std)</span><br><span class="line">p1.plot(x,y)</span><br><span class="line">p1.hist(data, bins=<span class="number">100</span>, rwidth=<span class="number">1</span>, normed=<span class="keyword">True</span>)</span><br><span class="line">p1.title.set_text(<span class="string">'Price Distribution'</span>)</span><br><span class="line">p1.set_xlabel(<span class="string">'Price'</span>)</span><br><span class="line">p1.set_ylabel(<span class="string">'Probability'</span>)</span><br><span class="line">p1.legend()</span><br><span class="line"></span><br><span class="line">x,y = [],[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> db_cursor.execute(<span class="string">'''SELECT ve,price FROM housing;'''</span>):</span><br><span class="line">y.append(i[<span class="number">0</span>])</span><br><span class="line">x.append(i[<span class="number">1</span>])</span><br><span class="line">p2.scatter(x,y)</span><br><span class="line">p2.title.set_text(<span class="string">'Green Coverage - Price'</span>)</span><br><span class="line">p2.set_xlabel(<span class="string">'Price'</span>)</span><br><span class="line">p2.set_ylabel(<span class="string">'Percentage'</span>)</span><br><span class="line">fit = np.polyfit(x, y, deg=<span class="number">1</span>)</span><br><span class="line">fit = (fit).tolist()</span><br><span class="line">y=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> x:</span><br><span class="line">y.append(i*fit[<span class="number">0</span>]+fit[<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line">p2.plot(x, y, <span class="string">'r-'</span>,label=<span class="string">'linear regression [%f,%f]'</span>%(fit[<span class="number">0</span>],fit[<span class="number">1</span>]))</span><br><span class="line">p2.set_ylim([<span class="number">0</span>,<span class="number">1</span>])</span><br><span class="line">p2.set_xlim([<span class="number">0</span>,<span class="number">127000</span>])</span><br><span class="line">p2.legend()</span><br><span class="line"></span><br><span class="line">x,y = [],[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> db_cursor.execute(<span class="string">'''SELECT area,price FROM housing;'''</span>):</span><br><span class="line">y.append(i[<span class="number">1</span>])</span><br><span class="line">x.append(i[<span class="number">0</span>])</span><br><span class="line">p3.scatter(x,y)</span><br><span class="line">p3.title.set_text(<span class="string">'Price - Community Area'</span>)</span><br><span class="line">p3.set_xlabel(<span class="string">'Community Area'</span>)</span><br><span class="line">p3.set_ylabel(<span class="string">'Unit Price'</span>)</span><br><span class="line">fit = np.polyfit(x, y, deg=<span class="number">1</span>)</span><br><span class="line">fit = (fit).tolist()</span><br><span class="line">y=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> x:</span><br><span class="line">y.append(i*fit[<span class="number">0</span>]+fit[<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line">p3.plot(x, y, <span class="string">'r-'</span>,label=<span class="string">'linear regression [%f,%f]'</span>%(fit[<span class="number">0</span>],fit[<span class="number">1</span>]))</span><br><span class="line">p3.set_xlim([<span class="number">0</span>,<span class="number">1000000</span>])</span><br><span class="line">p3.legend()</span><br><span class="line"></span><br><span class="line">plt.show()</span><br><span class="line">conn.close()</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Analyzing trend gives you a direction when making decisions. For instance, investigate the housing market before purchasing properties ma
      
    
    </summary>
    
    
      <category term="Spark" scheme="https://hisenz.com/tags/Spark/"/>
    
      <category term="data" scheme="https://hisenz.com/tags/data/"/>
    
      <category term="plot" scheme="https://hisenz.com/tags/plot/"/>
    
      <category term="python" scheme="https://hisenz.com/tags/python/"/>
    
      <category term="statistics" scheme="https://hisenz.com/tags/statistics/"/>
    
  </entry>
  
  <entry>
    <title>Online Geekish Writer</title>
    <link href="https://hisenz.com/2017/11/26/Online-Geekish-Writer/"/>
    <id>https://hisenz.com/2017/11/26/Online-Geekish-Writer/</id>
    <published>2017-11-26T08:21:20.000Z</published>
    <updated>2018-04-13T05:19:48.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://writer.bighugelabs.com/" target="_blank" rel="noopener">Online Geekish Writer</a> allows you to edit and write your own  document. Writing is synced to the server so that everything is up-to-date.</p><p>&nbsp;</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://writer.bighugelabs.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Online Geekish Writer&lt;/a&gt; allows you to edit and write your own 
      
    
    </summary>
    
    
      <category term="Recommendation" scheme="https://hisenz.com/tags/Recommendation/"/>
    
  </entry>
  
  <entry>
    <title>HTTPS connection is deployed.</title>
    <link href="https://hisenz.com/2017/11/25/HTTPS-connection-is-deployed/"/>
    <id>https://hisenz.com/2017/11/25/HTTPS-connection-is-deployed/</id>
    <published>2017-11-25T11:36:47.000Z</published>
    <updated>2018-04-13T04:56:47.993Z</updated>
    
    <content type="html"><![CDATA[<p>Https, HTTP over SSL, is one of the encrypted protocols which is widely used in web serving. The reason people would like to trust https connection is that HTTP protocol transfers non-encrypted contents. Activities such as online shopping cannot be secured under such a condition, so https was born.</p><p>Hisenz.com now has https connection working to deliver every word from this site to your browser.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Https, HTTP over SSL, is one of the encrypted protocols which is widely used in web serving. The reason people would like to trust https 
      
    
    </summary>
    
    
      <category term="News" scheme="https://hisenz.com/tags/News/"/>
    
  </entry>
  
  <entry>
    <title>November 22, 2017. Down.</title>
    <link href="https://hisenz.com/2017/11/23/November-22-2017-Down/"/>
    <id>https://hisenz.com/2017/11/23/November-22-2017-Down/</id>
    <published>2017-11-23T10:22:54.000Z</published>
    <updated>2018-04-13T05:14:49.000Z</updated>
    
    <content type="html"><![CDATA[<p>It&#8217;s Nov. 22, 2017, Hisen&#8217;s first server is down due to the Great Firewall.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;It&amp;#8217;s Nov. 22, 2017, Hisen&amp;#8217;s first server is down due to the Great Firewall.&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="News" scheme="https://hisenz.com/tags/News/"/>
    
  </entry>
  
  <entry>
    <title>Elementary Programming Study Package</title>
    <link href="https://hisenz.com/2017/10/30/Elementary-Programming-Study-Package/"/>
    <id>https://hisenz.com/2017/10/30/Elementary-Programming-Study-Package/</id>
    <published>2017-10-30T08:08:44.000Z</published>
    <updated>2018-04-13T04:56:47.993Z</updated>
    
    <content type="html"><![CDATA[<p>入门编程学习包 现已在GitHub发布</p><p>请访问<a href="https://github.com/HisenZhang/EP-elementary_programming" target="_blank" rel="noopener">GitHub</a>获取.</p><h1 id="INTRODUCTION"><a href="#INTRODUCTION" class="headerlink" title="INTRODUCTION"></a><a href="https://github.com/HisenZhang/EP-elementary_programming#introduction" target="_blank" rel="noopener"></a><strong>INTRODUCTION</strong></h1><p>This file contains several key information and instructions. Please read them carefully before using this pack.</p><p>&#8220;EP&#8221; (Elementary Programming) is capable of teaching students who never contact with computer programming. Unlike most of tutorials, this package change the order of knowledge according to the level of beginners. This course employed Python 3.X for instructing.</p><h2 id="CONTENTS"><a href="#CONTENTS" class="headerlink" title="CONTENTS"></a><a href="https://github.com/HisenZhang/EP-elementary_programming#contents" target="_blank" rel="noopener"></a><strong>CONTENTS</strong></h2><p>Period 1 contains several important thinkings and the use of scratch. Period 2 contains two basic logical structure, if &amp; loop. Period 3 contains introduction to Python. Period 4 contains the concept of function and call. Period 5 contains the concept of list, method and random. Period 6 contains how to setup environment for software developing. Period 7 contains the conventions in software issuing. Practice contains several exercise for practice. Project contains examples of final project, applying all knowledge learned.</p><h2 id="DIRECTORIES-amp-FILES"><a href="#DIRECTORIES-amp-FILES" class="headerlink" title="DIRECTORIES &amp; FILES"></a><a href="https://github.com/HisenZhang/EP-elementary_programming#directories--files" target="_blank" rel="noopener"></a><strong>DIRECTORIES &amp; FILES</strong></h2><p>The directories are named after the number of period.</p><p>In most of cases, you may search related contents with keyword by your resource explorer. The files are labeled with the topic it contains.</p><p>Description of some less frequently seen file format:</p><ul><li><code>.svg</code> are the vector graphs for mind map.</li><li><code>.xmind</code> are mind maps, edited with Xmind.</li><li><code>.md</code> are markdown files.<br><div class="highlight highlight-source-shell"><br><pre><span class="pl-c1">.</span><br>├── 1<br>│   ├── EP-01-QUICK-VIEW-SCRATCH.mp4<br>│   ├── 编程思想 <span class="pl-k">&amp;</span> Scratch.svg<br>│   └── 编程思想 <span class="pl-k">&amp;</span> Scratch.xmind<br>├── 2<br>│   ├── EP-02-LOGICAL-STRUCTURE.mp4<br>│   ├── img<br>│   │   └── Human_computers_-_Dryden.jpg<br>│   ├── 程序的逻辑结构.svg<br>│   └── 程序的逻辑结构.xmind<br>├── 3<br>│   ├── BASIC_IDEAS.pptx<br>│   ├── EP-03-PYTHON-INTRODUCTION.mp4<br>│   ├── Python入门.svg<br>│   └── Python入门.xmind<br>├── 4<br>│   ├── EP-04-DEFINE-FUCTION.mp4<br>│   ├── fib.gif<br>│   ├── Function.svg<br>│   └── Function.xmind<br>├── 5<br>│   ├── EP-05-LIST-METHOD-RANDOM.mp4<br>│   ├── Python List.svg<br>│   ├── Python List.xmind<br>│   └── Stack<span class="pl-k">&amp;</span>Queue.png<br>├── 6<br>│   ├── 1-IDE-INTRO-INSTALL.mp4<br>│   ├── 2-pyCharm-INTRO.mp4<br>│   ├── 3-Linux-MacOS-CONFIG.mp4<br>│   └── 4-Windows-CONFIG.mp4<br>├── 7<br>│   ├── EP-07-CODE-ISSUE.mp4<br>│   ├── Issue.xmind<br>│   └── Issue Your code.svg<br>├──  AUTHOR<br>├── LICENSE<br>├── practice<br>│   ├── if_<span class="pl-k">&amp;</span>_loop<br>│   │   ├── Python 循环<span class="pl-k">&amp;</span>判断 练习_key.md<br>│   │   └── Python 循环<span class="pl-k">&amp;</span>判断 练习.md<br>│   ├── is_lib_open<br>│   │   ├── is_lib_open.md<br>│   │   ├── is_lib_open.mp4<br>│   │   └── is_lib_open.py<br>│   └── list_matrix<br>│       ├── List 练习_key.md<br>│       └── List 练习.md<br>├── project<br>│   └── password_keeper<br>│       ├── COPYRIGHT.txt<br>│       ├── README.txt<br>│       └── src<br>│           └── password_keeper.py<br>└── README.md</pre></div></li></ul><p>15 directories, 39 files<br><br></p><h2 id="COPYRIGHT-amp-LICENSE"><a href="#COPYRIGHT-amp-LICENSE" class="headerlink" title="COPYRIGHT &amp; LICENSE"></a><a href="https://github.com/HisenZhang/EP-elementary_programming#copyright--license" target="_blank" rel="noopener"></a><strong>COPYRIGHT &amp; LICENSE</strong></h2><p>Copyright Hisen Zhang &amp; Fanks Fan @ Developer Association, Hangzhou Foreign Languages School</p><p>This package is free software project; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.</p><p>This package is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.</p><p>You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;入门编程学习包 现已在GitHub发布&lt;/p&gt;
&lt;p&gt;请访问&lt;a href=&quot;https://github.com/HisenZhang/EP-elementary_programming&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;
      
    
    </summary>
    
    
      <category term="Resources" scheme="https://hisenz.com/tags/Resources/"/>
    
      <category term="Totorial" scheme="https://hisenz.com/tags/Totorial/"/>
    
  </entry>
  
  <entry>
    <title>Reverse Polish Notation Implement</title>
    <link href="https://hisenz.com/2017/10/27/Reverse-Polish-Notation-Implement/"/>
    <id>https://hisenz.com/2017/10/27/Reverse-Polish-Notation-Implement/</id>
    <published>2017-10-27T10:41:59.000Z</published>
    <updated>2018-04-13T05:19:03.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rpn</span><span class="params">(expression)</span>:</span></span><br><span class="line">expression = expression.strip()</span><br><span class="line"><span class="comment"># remove all spaces on the left and right</span></span><br><span class="line">stack,digit=[],<span class="string">''</span></span><br><span class="line"><span class="comment"># 'stack' is used for interpreting the expression. </span></span><br><span class="line"><span class="comment"># 'digit' is used for storing numbers. If the number has more than one digits, </span></span><br><span class="line"><span class="comment"># the current character would be joined after the previous character until there </span></span><br><span class="line"><span class="comment"># comes a space or comma.</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> expression:</span><br><span class="line"><span class="keyword">if</span> i <span class="keyword">in</span> <span class="string">'0123456789.'</span>:</span><br><span class="line"><span class="comment"># if the current digit is an number/digital point</span></span><br><span class="line">digit += i </span><br><span class="line"><span class="comment"># then it would be joined after the previous one</span></span><br><span class="line"><span class="keyword">elif</span> i <span class="keyword">in</span> <span class="string">'+-*/, '</span>:</span><br><span class="line"><span class="comment"># or it is an operator</span></span><br><span class="line"><span class="keyword">if</span> i == <span class="string">' '</span> <span class="keyword">or</span> <span class="string">','</span>:</span><br><span class="line"><span class="comment"># if it is a seperator, i.e. space and commma</span></span><br><span class="line"><span class="keyword">if</span> digit == <span class="string">''</span>:</span><br><span class="line"><span class="comment"># since 'digit' would be wiped after a seperator </span></span><br><span class="line"><span class="comment"># comes, when it is empty it means the previous </span></span><br><span class="line"><span class="comment"># charater is also a seperator. This is set to </span></span><br><span class="line"><span class="comment"># prevent more than one seperator carelessly used,</span></span><br><span class="line"><span class="comment"># especially space.</span></span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"><span class="comment"># then do nothing.</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="comment"># Now it is a true seperator. </span></span><br><span class="line">stack.append(float(digit))</span><br><span class="line"><span class="comment"># We need to send the 'digit'</span></span><br><span class="line"><span class="comment"># into 'stack'</span></span><br><span class="line">digit = <span class="string">''</span></span><br><span class="line"><span class="comment"># and wipe 'digit'</span></span><br><span class="line"><span class="comment"># In other cases, not a seperator, it should take computation and send</span></span><br><span class="line"><span class="comment"># the result back to the end of 'stack'.</span></span><br><span class="line"><span class="keyword">if</span> i == <span class="string">'+'</span>:</span><br><span class="line"><span class="comment"># If it is a plus sign</span></span><br><span class="line">stack.append(stack.pop()+stack.pop()) </span><br><span class="line"><span class="comment"># pop two numbers out and plus</span></span><br><span class="line"><span class="keyword">if</span> i == <span class="string">'-'</span>:</span><br><span class="line"><span class="comment"># if minus</span></span><br><span class="line">stack.append(-stack.pop()+stack.pop())</span><br><span class="line"><span class="comment"># WARNING! there is a order when</span></span><br><span class="line"><span class="comment"># the number is poped. Rememer</span></span><br><span class="line"><span class="comment"># when doing subtraction, we need</span></span><br><span class="line"><span class="comment"># to swap the two number poped. </span></span><br><span class="line"><span class="comment"># But we may also achieve this by </span></span><br><span class="line"><span class="comment"># swaping the sign of each number.</span></span><br><span class="line"><span class="keyword">if</span> i == <span class="string">'*'</span>:</span><br><span class="line"><span class="comment"># Similar to addition</span></span><br><span class="line">stack.append(stack.pop()*stack.pop())</span><br><span class="line"><span class="keyword">if</span> i == <span class="string">'/'</span>:</span><br><span class="line"><span class="comment"># similar to substraction. But this</span></span><br><span class="line"><span class="comment"># time we can't swap two signs. </span></span><br><span class="line"><span class="comment"># defining two varibles to store s </span></span><br><span class="line"><span class="comment"># and d is a good idea.</span></span><br><span class="line">d,s = stack.pop(),stack.pop()</span><br><span class="line"><span class="comment"># defining </span></span><br><span class="line">stack.append(s/d)</span><br><span class="line"><span class="comment"># the result is s over d.</span></span><br><span class="line"><span class="keyword">else</span>: </span><br><span class="line"><span class="keyword">raise</span> SyntaxError(<span class="string">'Invalid characters included.'</span>)</span><br><span class="line"><span class="comment"># check invalid characters</span></span><br><span class="line"><span class="keyword">if</span> (len(stack) == <span class="number">1</span>) <span class="keyword">and</span> (digit==<span class="string">''</span>):</span><br><span class="line"><span class="comment"># if there is only one element (result)</span></span><br><span class="line"><span class="comment"># in the stack and there is nothing in</span></span><br><span class="line"><span class="comment"># 'digit', then everything goes well.</span></span><br><span class="line"><span class="comment"># the result is the final answer</span></span><br><span class="line"><span class="keyword">return</span> stack.pop()</span><br><span class="line"><span class="comment"># return the result</span></span><br><span class="line"><span class="keyword">else</span>: </span><br><span class="line"><span class="keyword">raise</span> SyntaxError(<span class="string">'Invalid expression.'</span>)</span><br><span class="line"><span class="comment"># Or raise the exception.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">print(rpn(sys.argv[<span class="number">1</span>]))</span><br><span class="line"><span class="keyword">except</span> SyntaxError:</span><br><span class="line">print(<span class="string">'Invalid expression.'</span>)</span><br><span class="line"><span class="keyword">except</span> IndexError:</span><br><span class="line">print(<span class="string">'SyntaxError'</span>)</span><br></pre></td></tr></table></figure><p>&nbsp;</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span clas
      
    
    </summary>
    
    
      <category term="uncategorized" scheme="https://hisenz.com/tags/uncategorized/"/>
    
  </entry>
  
</feed>
